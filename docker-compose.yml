version: "3.8"
services:
  frontend:
    build: ./frontend
    ports: 
      - 3000:3000

  backend:
    build: ./backend
    env_file:
      - .env
    ports:
      - 8000:8000
    depends_on:
      - elasticsearch
    networks:
      - elastic
    healthcheck:
      interval: 30s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8000/

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.6.2
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    networks:
    - elastic
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 30s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  elasticsearch:
    image: elasticsearch:8.2.2
    environment:
      - node.name=elasticsearch01
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic
    healthcheck:
      interval: 30s
      retries: 10
      test: curl -s http://elasticsearch:9200/_cluster/health | grep -vq '"status":"red"'

  kibana:
    image: kibana:8.2.2
    ports:
      - target: 5601
        published: 5601
    depends_on:
      - elasticsearch
    networks:
      - elastic      
    healthcheck:
      interval: 30s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

volumes:
  es_data:
    driver: local

networks:
  elastic:
    name: elastic
    driver: bridge

